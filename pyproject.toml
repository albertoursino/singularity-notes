[project]
name = "singularity-notes"
version = "0.1.0"
description = "Fully automated blog delivering posts written by AI on the latest astronomy discoveries."
authors = [{ name = "Alberto Ursino", email = "albertoursino98@gmail.com" }]
readme = "README.md"
requires-python = ">=3.13, <3.14"
dependencies = [
    "hugo (>=0.148.1,<0.149.0)",
    "pre-commit (>=4.2.0,<5.0.0)",
    "arxiv (>=2.2.0,<3.0.0)",
    "loguru (>=0.7.3,<0.8.0)",
    "openai (>=1.97.1,<2.0.0)",
    "python-dotenv (>=1.1.1,<2.0.0)",
    "pypdf2 (>=3.0.1,<4.0.0)",
    "poethepoet (>=0.36.0,<0.37.0)",
    "jsonschema (>=4.25.0,<5.0.0)",
]

[project.optional-dependencies]
dev = ["pytest (>=8.4.1,<9.0.0)"]

[tool.poetry]
package-mode = false
requires-poetry = ">=2.1"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
exclude = []

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 90
indent-width = 4

# Assume Python 3.13
target-version = "py313"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
app = "hugo server -D --source app"
pipe = "python run_pipeline.py"
